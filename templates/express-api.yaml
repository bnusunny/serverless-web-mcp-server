# Metadata: Framework: Express.js
# Metadata: Type: API
# Metadata: Description: Template for Express.js API with Lambda Web Adapter

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Express.js API with Lambda Web Adapter

Parameters:
  ProjectName:
    Type: String
    Default: ${PROJECT_NAME}
    Description: Name of the project
  
  Runtime:
    Type: String
    Default: ${RUNTIME}
    Description: Lambda runtime
  
  MemorySize:
    Type: Number
    Default: ${MEMORY_SIZE}
    Description: Lambda memory size in MB
  
  Timeout:
    Type: Number
    Default: ${TIMEOUT}
    Description: Lambda timeout in seconds

Resources:
  # Lambda function for Express.js API
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ProjectName}-function
      CodeUri: ./
      Handler: index.handler
      Runtime: !Ref Runtime
      MemorySize: !Ref MemorySize
      Timeout: !Ref Timeout
      Environment:
        Variables:
          NODE_ENV: production
${ENVIRONMENT_VARIABLES}
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerX86:1

  # API Gateway
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Ref ProjectName
      StageName: prod
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod/
  
  ApiId:
    Description: API Gateway ID
    Value: !Ref Api
  
  LambdaFunctionArn:
    Description: Lambda function ARN
    Value: !GetAtt ApiFunction.Arn
